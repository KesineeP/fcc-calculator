{"version":3,"sources":["component/NumberButtons.js","component/OperatorButtons.js","component/Calculator.js","component/index.js","App.js","index.js"],"names":["NumberButtons","name","areaName","onClickNumber","id","style","default","gridArea","boxShadow","Button","type","variant","onClick","OperatorButtons","onClickOperation","numberList","operatorListTop","operatorListRight","styles","display","minHeight","padding","backgroundColor","margin","borderRadius","width","container","flexDirection","justifyContent","marginTop","border","Calculator","useState","currentValue","setCurrentValue","operation","setOperation","setLastButtonPressed","result","data","setData","num","includes","console","log","concat","button","calculate","prev","calcNum","numValue","parseFloat","Container","fluid","className","integerDisplay","stringNumber","toString","integerDigits","split","decimalDigits","isNaN","toLocaleString","maximumFractionDigits","length","toFixed","getDisplayNumber","map","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e385ec4b.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\n// import ButtonGroup from 'react-bootstrap/ButtonGroup';\n\n\nconst NumberButtons = ({ name, areaName, onClickNumber, id }) => {\n    const style = {\n        default: {\n            gridArea: areaName,\n            boxShadow: '1px 1px 3px grey',\n\n        }\n    }\n    return (\n        <Button\n            type=\"button\"\n            variant=\"outline-secondary\"\n            id={id}\n            style={style.default}\n            onClick={() => onClickNumber(name)}\n        >\n            {name}\n        </Button >\n    )\n}\n\nexport default NumberButtons;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst OperatorButtons = ({ name, id, areaName, onClickOperation }) => {\n    const style = {\n        default: {\n            gridArea: areaName,\n            boxShadow: '1px 1px 3px grey',\n\n        }\n    }\n    return (\n        <Button\n            variant=\"outline-info\"\n            id={id}\n            style={style.default}\n            onClick={() => onClickOperation(name)}>\n            {name}\n        </Button >\n    )\n}\nexport default OperatorButtons;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './StyleSheet.css';\nimport NumberButtons from './NumberButtons';\nimport OperatorButtons from './OperatorButtons';\nimport { Container } from 'react-bootstrap';\n\nconst numberList = [\n    [\"zero\", \"0\"],\n    [\"one\", \"1\"],\n    [\"two\", \"2\"],\n    [\"three\", \"3\"],\n    [\"four\", \"4\"],\n    [\"five\", \"5\"],\n    [\"six\", \"6\"],\n    [\"seven\", \"7\"],\n    [\"eight\", \"8\"],\n    [\"nine\", \"9\"],\n    [\"decimal\", \".\"]\n];\nconst operatorListTop = [[\"clear\", \"AC\"], [\"divide\", \"/\"]];\nconst operatorListRight = [[\"multiply\", \"x\"], [\"subtract\", \"-\"], [\"add\", \"+\"], [\"equals\", \"=\"]];\n\nconst Calculator = () => {\n    const [currentValue, setCurrentValue] = useState('')\n    const [operation, setOperation] = useState('')\n    const [lastButtonPressed, setLastButtonPressed] = useState(\"\");\n    const [data, setData] = useState({ result: 0, display: currentValue })\n\n\n    const getDisplayNumber = (num) => {\n        const stringNumber = num.toString()\n        const integerDigits = parseFloat(stringNumber.split('.')[0])\n        const decimalDigits = stringNumber.split('.')[1]\n        let integerDisplay\n        if (isNaN(integerDigits)) {\n            integerDisplay = ''\n        } else {\n            integerDisplay = integerDigits.toLocaleString('en', {\n                maximumFractionDigits: 0\n            })\n        }\n        if (decimalDigits != null) {\n            return `${integerDisplay}.${decimalDigits.length > 4 ? parseFloat(decimalDigits).toFixed(4) : decimalDigits}`\n        } else {\n            return integerDisplay\n        }\n\n    }\n    const onClickNumber = (num) => {\n\n        if (num === '0' && currentValue === '0') return null;\n        if (num === '.' && currentValue.includes('.')) return;\n\n        if (num === '.' && currentValue === '') {\n            console.log('click decimal')\n            setCurrentValue('0'.concat(num));\n        } else {\n            setCurrentValue(currentValue.concat(num));\n        }\n        setData({ ...data, display: currentValue.concat(num) })\n        setLastButtonPressed('number');\n    }\n\n    const onClickOperation = (button) => {\n\n        if (button === \"AC\") {\n            setCurrentValue('')\n            setData({ result: 0, display: 0 })\n            setOperation('');\n\n        } else {\n            if (currentValue !== '') calculate(currentValue)\n            setOperation(button)\n            if (button === '=') {\n                setData((prev) => {\n                    return { ...prev, display: prev.result }\n                })\n            }\n        }\n\n        setCurrentValue('')\n        setOperation(button);\n        setLastButtonPressed(button === \"AC\" ? \"number\" : \"operator\");\n\n    }\n\n    const calculate = (currentValue) => {\n        const numValue = parseFloat(currentValue);\n        if (data.result === 0) {\n            setData({ result: numValue, display: numValue })\n            return;\n        }\n        let calcNum;\n        switch (operation) {\n            case \"-\":\n                calcNum = data.result - numValue;\n                setData({ result: calcNum, display: calcNum })\n                break;\n            case \"/\":\n                calcNum = data.result / numValue;\n                setData({ result: calcNum, display: calcNum })\n                break;\n            case \"+\":\n                calcNum = data.result + numValue;\n                setData({ result: calcNum, display: calcNum })\n                break;\n            case \"x\":\n                calcNum = data.result * numValue;\n                setData({ result: calcNum, display: calcNum })\n                break;\n            case \"=\":\n                break;\n            default:\n                setData({ result: numValue, display: numValue })\n\n        }\n\n    };\n\n\n    console.log(\"currentValue\", currentValue);\n    console.log(\"operation\", operation);\n    console.log(\"data\", data)\n    console.log(\"------------\");\n\n    return (\n        <Container fluid>\n            <div style={styles.container}>\n                <h1>Calculator</h1>\n                <div style={styles.display}>\n                    <p className=\"result\" id=\"display\">{getDisplayNumber(data.display) || '0'}</p>\n                </div>\n                <div className=\"button-container\">\n                    <div className=\"operatorListTop\">\n                        {operatorListTop.map((name, index) =>\n                            <OperatorButtons\n                                name={name[1]}\n                                id={name[0]}\n                                key={index}\n                                areaName={name[0]}\n                                onClickOperation={onClickOperation}\n                            />)}\n                    </div>\n                    <div className=\"numberBtn\">\n                        {numberList.map((num, index) =>\n                            <NumberButtons\n                                id={num[0]}\n                                name={num[1]}\n                                areaName={num[0]}\n                                key={index}\n                                onClickNumber={onClickNumber}\n                            />)}\n                    </div>\n                    <div className=\"operatorListRight\">\n                        {operatorListRight.map((name, index) =>\n                            <OperatorButtons\n                                id={name[0]}\n                                name={name[1]}\n                                key={index}\n                                onClickOperation={onClickOperation}\n                            />)}\n                    </div>\n                </div>\n            </div>\n            <p>Coded by Kesinee</p>\n        </Container>\n    )\n}\n\nconst styles = {\n    display: {\n        minHeight: '40px',\n        padding: '10px 0',\n        backgroundColor: 'lightblue',\n        margin: '5px 0',\n        borderRadius: '5px',\n        width: '230px',\n        boxShadow: '1px 1px 3px grey',\n    },\n    container: {\n        width: '250px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        margin: '0 auto',\n        marginTop: '10%',\n        border: '1px solid darkgrey',\n        borderRadius: '10px',\n        boxShadow: '2px 2px 5px grey',\n        padding: '9px',\n        backgroundColor: '#effcf7'\n    },\n}\nexport default Calculator;","import Calculator from './Calculator';\n\nexport default Calculator;","\nimport './App.css';\nimport Calculator from './component';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}